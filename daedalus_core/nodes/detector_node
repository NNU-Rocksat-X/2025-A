#!/usr/bin/env python

import rospy
from daedalus_core.signal_detector import Detector
from daedalus_msgs.srv import SignalStatus, SignalStatusResponse

TE_PIN = 5 # pin 29
FULL_INHIBIT_PIN = 21 # pin 40 
PARTIAL_INHIBIT_PIN = 20 # pin 38 

PERSISTENCE_THRESHOLD = 10

te_detector = Detector(TE_PIN, PERSISTENCE_THRESHOLD)
full_inhibit_detector = Detector(FULL_INHIBIT_PIN, PERSISTENCE_THRESHOLD)
partial_inhibit_detector = Detector(PARTIAL_INHIBIT_PIN, PERSISTENCE_THRESHOLD)

def te_status_cb(req):
    state = te_detector.get_state()
    return SignalStatusResponse(state)

def full_inhibit_status(req):
    state = full_inhibit_detector.get_state()
    return SignalStatusResponse(state)

def partial_inhibit_status(req):
    state = partial_inhibit_detector.get_state()
    return SignalStatusResponse(state)

def main():
    rospy.init_node("detector_node")
    rospy.Service("te_detection", SignalStatus, te_status_cb)
    rospy.Service("partial_inhibit_detection", SignalStatus, partial_inhibit_status)
    rospy.Service("full_inhibit_detection", SignalStatus, full_inhibit_status)

    rate = rospy.Rate(10)


    while not rospy.is_shutdown():
        te_detector.detect()
        full_inhibit_detector.detect()
        partial_inhibit_detector.detect()
        rospy.loginfo("TE_State: " + str(te_detector.get_state()))
        rospy.loginfo("Full_Inhibit_State: " + str(full_inhibit_detector.get_state()))
        rospy.loginfo("Partial_Inhibit_State: " + str(partial_inhibit_detector.get_state()))
        rate.sleep()

if __name__ == "__main__":
    main()


# To verify:
# 1. roscore
# 2. rosservice list
#   Make sure all 3 detection services are listed
# 3. rosservice call <detector name>
#   Turn it on and off and make sure this returns the correct value